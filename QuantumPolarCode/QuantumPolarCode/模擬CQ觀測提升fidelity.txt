clc;clear all;
%set
%phase
Id = [1 0; 0 1];
ket0 = [1; 0];
ket1 = [0; 1];
ket00=ket0*ket0';
CNOT = [1 0 0 0; 0 0 0 1; 0 0 1 0; 0 1 0 0];
Hadamard = [1 1;1 -1]/sqrt(2);

%CQ_channel
%產生一個random qbit
theta=randi([0 90]); %角度
theta2=(theta)*pi/180;
MessageQ_Bit=cos(theta2)*ket0 + sin(theta2)*ket1;
MessageQ=MessageQ_Bit*MessageQ_Bit';
%{0 1} 經過CNOT-> {1 1} 經過CQ-> {rho1 rho1}
MessageQ_after_CNOT=kron(MessageQ,MessageQ);
%noise
p=0.05;
M1 = sqrt(1-p)*[1 0; 0 1];
M2 = sqrt(p)*[0 1; 1 0];
 %[0 1; 1 0]
 %[1 0; 0 -1]
 %[0 -1i; 1i 0]


qubit_num=2;%有幾個qubit
MessageQ_AfterNoise = 0;
%add noisy
K=0;
[out] = gen_2n_list(qubit_num);
for i=1:length(out)
K=getError(out(i,:),M1,M2);
MessageQ_AfterNoise = MessageQ_AfterNoise + K * MessageQ_after_CNOT * K';
end
%%%


Density_AfterDecode=CNOT*MessageQ_AfterNoise*CNOT';                %{rho1 rho1} 經過解碼CNOT->

[Density_M1,p1,o1]=measure(Density_AfterDecode, [1 0],ket0);        %做 Measurement
[Density_M2,p2,o2]=measure(Density_M1, [0 1],MessageQ_Bit);

Density_M1(find(Density_M1==0))=[];
Density_After_M1 = reshape(Density_M1,[2,2]);
Fidelity=trace(Density_After_M1*MessageQ);%等於p2
disp('MessageQ')
disp(MessageQ)
if(o1==0)
    disp('MessageQ After Measurement')
    disp(Density_After_M1)
else
    disp('Failed!')
    disp(Density_After_M1)
end


disp('Fidelity')
disp(Fidelity)
