error_rate2=[0.003 0.005 0.007 0.01 0.02 0.03 0.04 0.05];
TCx=mod(MZ*T',2);
TCx=[TCx(1:5,:);TCx(9,:);TCx(14:15,:)];
TCz=mod(MX*T',2);
TCz=[TCz(2:3,:) ;TCz(8,:) ;TCz(12:16,:)];

for er=1:8
AAns=0;
BAns=0;
CAns=0;
DAns=0;
RN=1000000;
error_rate=error_rate2(er);

for num=1:RN

error_rate_X=2*error_rate/3;
error_rate_Z=2*error_rate/3;
ex=floor(rand(1,16) / (1-error_rate_X));
ez=floor(rand(1,16) / (1-error_rate_Z));

cx=1;
cz=1;
sx=mod(MZ*ex',2)';
ssx=[sx(1) sx(2) sx(3) sx(4) sx(5) sx(9) sx(14) sx(15)];

sz=mod(MX*ez',2)';
ssz=[sz(2:3) sz(8) sz(12:16)];



for i=1:697 
    if ssx'==TCx(:,i)
        cx=i;
        break
    end
end
for i=1:697
    if ssz'==TCz(:,i)
        cz=i;
        break
    end
end


Corx=mod(T(cx,:)+ex,2);
Corz=mod(T(cz,:)+ez,2);

if (mod(Corx(1)+Corx(3)+Corx(9)+Corx(11),2)==0 & mod(Corz(1)+Corz(3)+Corz(9)+Corz(11),2)==0)
    AAns=AAns+1;
end
if (mod(Corx(1)+Corx(2)+Corx(9)+Corx(10),2)==0 & mod(Corz(10)+Corz(12)+Corz(14)+Corz(16),2)==0)
    BAns=BAns+1;
end
if (mod(Corx(1)+Corx(3)+Corx(5)+Corx(7),2)==0 & mod(Corz(7)+Corz(8)+Corz(15)+Corz(16),2)==0)
    CAns=CAns+1;
end
if (mod(Corx(1)+Corx(2)+Corx(5)+Corx(6),2)==0 & mod(Corz(6)+Corz(8)+Corz(14)+Corz(16),2)==0)
    DAns=DAns+1;
end

end

AAns
BAns
CAns
DAns

AErrorRate=(RN-AAns)/RN;
BErrorRate=(RN-BAns)/RN;
CErrorRate=(RN-CAns)/RN;
DErrorRate=(RN-DAns)/RN;

ErrorRate=[AErrorRate BErrorRate CErrorRate DErrorRate]
error_rate_after=vpa(ErrorRate);
X(1,er)=error_rate;
X(2:5,er)=error_rate_after;
X
end



semilogy(X(1,:),X(1,:),'b--o',X(1,:),X(2,:),'-d',X(1,:),X(3,:),'-o',X(1,:),X(4,:),'-*',X(1,:),X(5,:),'-x')
grid on
xlabel('Channel Error Rate','FontSize',12);% x軸名稱
ylabel('Logical Qubit Error Rate','FontSize',12); 
title('[[16,4;4]] Quantum Polar code','FontSize',14);  
legend('Uncoded-ErrorRate','1-st Qubit','2-nd Qubit','3-rd Qubit','4-th Qubit','location','best','FontSize',13);  
